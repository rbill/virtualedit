/**
 * generated by Xtext 2.11.0
 */
package at.ac.tuwien.big.virtmodel.vLang.impl;

import at.ac.tuwien.big.virtmodel.vLang.BasicAction;
import at.ac.tuwien.big.virtmodel.vLang.FunctionPar;
import at.ac.tuwien.big.virtmodel.vLang.FunctionPars;
import at.ac.tuwien.big.virtmodel.vLang.SetOrFunctionDef;
import at.ac.tuwien.big.virtmodel.vLang.VLangPackage;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Basic Action</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link at.ac.tuwien.big.virtmodel.vLang.impl.BasicActionImpl#getParams <em>Params</em>}</li>
 *   <li>{@link at.ac.tuwien.big.virtmodel.vLang.impl.BasicActionImpl#getThing <em>Thing</em>}</li>
 *   <li>{@link at.ac.tuwien.big.virtmodel.vLang.impl.BasicActionImpl#getCalledFunc <em>Called Func</em>}</li>
 * </ul>
 *
 * @generated
 */
public class BasicActionImpl extends AssignStatementImpl implements BasicAction
{
  /**
   * The cached value of the '{@link #getParams() <em>Params</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getParams()
   * @generated
   * @ordered
   */
  protected EList<FunctionPar> params;

  /**
   * The cached value of the '{@link #getThing() <em>Thing</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getThing()
   * @generated
   * @ordered
   */
  protected SetOrFunctionDef thing;

  /**
   * The default value of the '{@link #getCalledFunc() <em>Called Func</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCalledFunc()
   * @generated
   * @ordered
   */
  protected static final String CALLED_FUNC_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getCalledFunc() <em>Called Func</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCalledFunc()
   * @generated
   * @ordered
   */
  protected String calledFunc = CALLED_FUNC_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected BasicActionImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return VLangPackage.Literals.BASIC_ACTION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<FunctionPar> getParams()
  {
    if (params == null)
    {
      params = new EObjectContainmentEList<FunctionPar>(FunctionPar.class, this, VLangPackage.BASIC_ACTION__PARAMS);
    }
    return params;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public SetOrFunctionDef getThing()
  {
    if (thing != null && thing.eIsProxy())
    {
      InternalEObject oldThing = (InternalEObject)thing;
      thing = (SetOrFunctionDef)eResolveProxy(oldThing);
      if (thing != oldThing)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, VLangPackage.BASIC_ACTION__THING, oldThing, thing));
      }
    }
    return thing;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public SetOrFunctionDef basicGetThing()
  {
    return thing;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setThing(SetOrFunctionDef newThing)
  {
    SetOrFunctionDef oldThing = thing;
    thing = newThing;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, VLangPackage.BASIC_ACTION__THING, oldThing, thing));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getCalledFunc()
  {
    return calledFunc;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setCalledFunc(String newCalledFunc)
  {
    String oldCalledFunc = calledFunc;
    calledFunc = newCalledFunc;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, VLangPackage.BASIC_ACTION__CALLED_FUNC, oldCalledFunc, calledFunc));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case VLangPackage.BASIC_ACTION__PARAMS:
        return ((InternalEList<?>)getParams()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case VLangPackage.BASIC_ACTION__PARAMS:
        return getParams();
      case VLangPackage.BASIC_ACTION__THING:
        if (resolve) return getThing();
        return basicGetThing();
      case VLangPackage.BASIC_ACTION__CALLED_FUNC:
        return getCalledFunc();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case VLangPackage.BASIC_ACTION__PARAMS:
        getParams().clear();
        getParams().addAll((Collection<? extends FunctionPar>)newValue);
        return;
      case VLangPackage.BASIC_ACTION__THING:
        setThing((SetOrFunctionDef)newValue);
        return;
      case VLangPackage.BASIC_ACTION__CALLED_FUNC:
        setCalledFunc((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case VLangPackage.BASIC_ACTION__PARAMS:
        getParams().clear();
        return;
      case VLangPackage.BASIC_ACTION__THING:
        setThing((SetOrFunctionDef)null);
        return;
      case VLangPackage.BASIC_ACTION__CALLED_FUNC:
        setCalledFunc(CALLED_FUNC_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case VLangPackage.BASIC_ACTION__PARAMS:
        return params != null && !params.isEmpty();
      case VLangPackage.BASIC_ACTION__THING:
        return thing != null;
      case VLangPackage.BASIC_ACTION__CALLED_FUNC:
        return CALLED_FUNC_EDEFAULT == null ? calledFunc != null : !CALLED_FUNC_EDEFAULT.equals(calledFunc);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int eBaseStructuralFeatureID(int derivedFeatureID, Class<?> baseClass)
  {
    if (baseClass == FunctionPars.class)
    {
      switch (derivedFeatureID)
      {
        case VLangPackage.BASIC_ACTION__PARAMS: return VLangPackage.FUNCTION_PARS__PARAMS;
        default: return -1;
      }
    }
    return super.eBaseStructuralFeatureID(derivedFeatureID, baseClass);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int eDerivedStructuralFeatureID(int baseFeatureID, Class<?> baseClass)
  {
    if (baseClass == FunctionPars.class)
    {
      switch (baseFeatureID)
      {
        case VLangPackage.FUNCTION_PARS__PARAMS: return VLangPackage.BASIC_ACTION__PARAMS;
        default: return -1;
      }
    }
    return super.eDerivedStructuralFeatureID(baseFeatureID, baseClass);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (calledFunc: ");
    result.append(calledFunc);
    result.append(')');
    return result.toString();
  }

} //BasicActionImpl
